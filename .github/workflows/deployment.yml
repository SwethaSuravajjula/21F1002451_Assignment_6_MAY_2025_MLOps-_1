name: Deploy to GKE

on:
  push:
    branches:
      - master

env:
  PROJECT_ID: fourth-scheme-461516-n2
  GAR_LOCATION: us-west1
  REPO_NAME: repo
  IMAGE_NAME: iris-api
  CLUSTER_NAME: gke-cluster-iris
  CLUSTER_ZONE: us-west1
  DEPLOYMENT_NAME: iris-deployment

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up gcloud CLI
      uses: google-github-actions/setup-gcloud@v2

    - name: Authenticate and Set up GKE Auth Plugin
      env:
        GCP_CREDENTIALS_B64: ${{ secrets.GCP_SA_KEYS }}
      run: |
        gcloud components install gke-gcloud-auth-plugin
        echo "$GCP_CREDENTIALS_B64" | base64 -d > gcp-key.json
        gcloud auth activate-service-account --key-file=gcp-key.json
        gcloud config set project ${{ env.PROJECT_ID }}
        
    - name: Configure Docker for Artifact Registry
      run: |
        gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev
        
    - name: Build and Tag Docker image
      run: |
        docker build -t ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:latest .
        
    - name: Push Docker image to Artifact Registry
      run: |
        docker push ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:latest
        
    - name: Get GKE cluster credentials
      run: |
        gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }} --zone ${{ env.CLUSTER_ZONE }}
        
    # NEW FINAL STEP: Deploy using kubectl apply
    - name: Deploy to GKE
      run: |
        # Define the full image URL
        IMAGE_URL="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:latest"
        
        # Replace the placeholder in the deployment manifest
        sed -i "s|IMAGE_PLACEHOLDER|$IMAGE_URL|g" k8s/deployment.yaml
        
        # Apply the manifest to create or update the deployment
        kubectl apply -f k8s/deployment.yaml
